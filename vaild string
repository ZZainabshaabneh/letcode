class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        int count = 0;

        if (s.isEmpty()) return true;
         
        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);

             if (currentChar == '(' || currentChar == '[' || currentChar == '{') {
                stack.push(currentChar);
            } 
             else if (currentChar == ')' || currentChar == ']' || currentChar == '}') {
            if (stack.isEmpty()) return false;   
                char top = stack.pop();

                 
                if ((currentChar == ')' && top == '(') || 
                    (currentChar == '}' && top == '{') || 
                    (currentChar == ']' && top == '[')) {
                    count++;
                } else {
                    return false;  
                }
            }
        }

        if(stack.isEmpty() && count == s.length() / 2)
           return true;
        else
          return false;
    }
}
